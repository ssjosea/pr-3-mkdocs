{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenido a la web de Jose A. Estrella Tijeras alojada en GitHub Pages","text":"<p>La web est\u00e1 alojada en -&gt; mkdocs.org.</p>"},{"location":"#que-es-mkdocs","title":"\u00bfQu\u00e9 es MkDocs?","text":"<p>MkDocs es un generador de sitios web est\u00e1ticos que nos permite crear de forma sencilla un sitio web para documentar un proyecto. El contenido del sitio web est\u00e1 escrito en texto plano en formato Markdown y se configura con un \u00fanico archivo de configuraci\u00f3n en formato YAML.</p> <p>En esta pr\u00e1ctica vamos a utilizar una imagen Docker que contiene MkDocs y el theme Material.</p> <p>Esta imagen Docker nos permite:</p> <ul> <li>Crear un nuevo proyecto (Comando: <code>new</code>).</li> <li>Crear un servidor de desarrollo local (Comando: <code>serve</code>).</li> <li>Generar la documentaci\u00f3n (Comando: <code>build</code>).</li> <li>Publicar la documentaci\u00f3n en GitHub Pages (Comando: <code>gh-deploy</code>).</li> </ul> <pre><code>Usage: mkdocs [OPTIONS] COMMAND [ARGS]...\n\n  MkDocs - Project documentation with Markdown.\n\nOptions:\n  -V, --version  Show the version and exit.\n  -q, --quiet    Silence warnings\n  -v, --verbose  Enable verbose output\n  -h, --help     Show this message and exit.\n\nCommands:\n  build      Build the MkDocs documentation\n  gh-deploy  Deploy your documentation to GitHub Pages\n  new        Create a new MkDocs project\n  serve      Run the builtin development server\n</code></pre>"},{"location":"#comandos","title":"Comandos","text":""},{"location":"#comando-new","title":"Comando: <code>new</code>","text":"<p>Crea la estructura de archivos del proyecto MkDocs podemos hacer uso del comando new, como se muestra en el siguiente ejemplo.</p> <pre><code>docker run --rm -it -p 8000:8000 -v \"$PWD\":/docs squidfunk/mkdocs-material new .\n</code></pre>"},{"location":"#comando-serve","title":"Comando: <code>serve</code>","text":"<p>Crea el contenedor desde el directorio principal del proyecto con un volumen de tipo bind mount entre nuestra m\u00e1quina y el contenedor Docker.</p> <p>Una vez iniciado el contenedor podemos acceder a la URL http://localhost:8000 desde un navegador web para ver el estado actual del sitio web que estamos creando.</p> <pre><code>docker run --rm -it -p 8000:8000 -v \"$PWD\":/docs squidfunk/mkdocs-material\n</code></pre>"},{"location":"#comando-build","title":"Comando: <code>build</code>","text":"<p>Tambi\u00e9n es posible generar directamente el sitio web sin tener que iniciar un servidor local de desarrollo. Para generar el sitio web autom\u00e1ticamente podemos ejecutar el siguiente comando:</p> <pre><code>docker run --rm -it -v \"$PWD\":/docs squidfunk/mkdocs-material build\n</code></pre>"},{"location":"#comandogh-deploy","title":"Comando:<code>gh-deploy</code>","text":"<p>Es posible publicar la el sitio web en GitHub Pages con el siguiente comando:</p> <pre><code>docker run --rm -it -v ~/.ssh:/root/.ssh -v \"$PWD\":/docs squidfunk/mkdocs-material gh-deploy\n</code></pre>"}]}